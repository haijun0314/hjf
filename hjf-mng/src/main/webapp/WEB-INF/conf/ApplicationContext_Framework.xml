<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		    
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	   <property name="locations">
	    <list>
	      <value>classpath:db.properties</value>
	      <value>classpath:application.properties</value>
	    </list>
	   </property>
	</bean>
    <!-- 阿里 druid 数据库连接池 -->  
      <bean id = "dataSource" class = "com.alibaba.druid.pool.DruidDataSource" destroy-method = "close">    
           <!-- 数据库基本信息配置 -->  
           <property name = "url" value = "${url}" />    
           <property name = "username" value = "root" />    
           <property name = "password" value = "root" />    
           <property name = "driverClassName" value = "${driverClassName}" />    
           <property name = "filters" value = "${filters}" />    
            <!-- 最大并发连接数 -->  
           <property name = "maxActive" value = "${maxActive}" />  
           <!-- 初始化连接数量 -->  
           <property name = "initialSize" value = "${initialSize}" />  
           <!-- 配置获取连接等待超时的时间 -->  
           <property name = "maxWait" value = "${maxWait}" />  
           <!-- 最小空闲连接数 -->  
           <property name = "minIdle" value = "${minIdle}" />    
           <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
           <property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />  
           <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
           <property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />    
           <property name = "validationQuery" value = "${validationQuery}" />    
           <property name = "testWhileIdle" value = "${testWhileIdle}" />    
           <property name = "testOnBorrow" value = "${testOnBorrow}" />    
           <property name = "testOnReturn" value = "${testOnReturn}" />    
           <property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />  
           <!-- 打开 removeAbandoned 功能 -->  
           <property name = "removeAbandoned" value = "${removeAbandoned}" />  
           <!-- 1800 秒，也就是 30 分钟 -->  
           <property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />  
           <!-- 关闭 abanded 连接时输出错误日志 -->     
           <property name = "logAbandoned" value = "${logAbandoned}" />  
      </bean>  	
	
	
	
	 	 
	<!-- 	    
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"	destroy-method="close">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl" value="${dataSource.url}">
		</property>
		<property name="user" value="${dataSource.username}"></property>
		<property name="password" value="${dataSource.password}"></property>
		<property name="acquireIncrement"> <value>2</value>	</property>
		<property name="initialPoolSize"><value>3</value></property>
		<property name="minPoolSize"><value>5</value></property>
		<property name="maxPoolSize"><value>20</value></property>
		<property name="maxIdleTime"><value>600</value></property>
		<property name="idleConnectionTestPeriod"><value>120</value></property>
		<property name="maxStatements">	<value>100</value></property>
		<property name="numHelperThreads"><value>10</value></property>
	</bean>
	  -->
	  
	  
	  
	 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml" /> 
	</bean>
 
	<bean id="sqlSession"     class="org.mybatis.spring.SqlSessionTemplate">   
          <constructor-arg index="0" ref="sqlSessionFactory" />   
    </bean>  
  
	 
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	 
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- springJDBC配置 -->
	<bean id="jdbcTemplateEx" class="com.hjf.base.jdbc.JdbcTemplateEx">
        <property name="dataSource" ref="dataSource"/>
    </bean>	
	
    
	
	
	<!-- 启用用户的缓存功能
	<bean id="userCache"		class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<property name="cache" ref="userEhCache" />
	</bean>
	
	<bean id="userEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheName" value="userCache" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	
	<bean id="aclCache"	class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg ref="aclEhCache" />
	</bean>
	
	<bean id="aclEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager" />
		<property name="cacheName" value="aclCache" />
	</bean>	
	<bean id="cacheManager"		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
	
	 -->	
	
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list> 
				<value>application</value>
			</list>
		</property>
	</bean>
<bean id="SpringFactory" class="com.hjf.base.spring.ApplicationFactory" />	 
	
</beans>
